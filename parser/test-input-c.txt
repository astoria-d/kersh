int aaaa;
int dddd = 0;
int;
char buf[ BUFSIZE ];
int char* pt = buf;
typedef int INT32 ;
struct point ct = {5,32};
typedef struct point {
    int x;
    int y;
} T_POINT ;

struct ftrace_branch_data {
 const char *func;
 const char *file;
 unsigned line;
 union {
  struct {
   unsigned long correct;
   unsigned long incorrect;
  };
  struct {
   unsigned long miss;
   unsigned long hit;
  };
  unsigned long miss_hit[2];
 };
};

 int r = 32;

return 0;

	aaaa = 0xffff0000u;
	
{
 int r = 32;

 if (!x)
  return 0;
 if (!(x & 0xffff0000u)) {
  x <<= 16;
  r -= 16;
 }
 if (!(x & 0xff000000u)) {
  x <<= 8;
  r -= 8;
 }
 if (!(x & 0xf0000000u)) {
  x <<= 4;
  r -= 4;
 }
 if (!(x & 0xc0000000u)) {
  x <<= 2;
  r -= 2;
 }
 if (!(x & 0x80000000u)) {
  x <<= 1;
  r -= 1;
 }
 return r;
}


 return fls(x & -x);

 return ffs(x) - 1;

 h = x >> 32;
 if (h)
  return fls(h) + 32;
 return fls(x);

 if (b[0])
  return __ffs(b[0]);
 if (b[1])
  return __ffs(b[1]) + 32;
 if (b[2])
  return __ffs(b[2]) + 64;
 return __ffs(b[3]) + 96;
 return __sw_hweight64(w);
 return ( __le64)*p;


struct pg_read_hdr {

 char magic;
 char scsi;
 int dlen;
 int duration;
 char pad[12];

};
